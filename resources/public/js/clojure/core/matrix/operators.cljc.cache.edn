;; Analyzed by ClojureScript 1.7.228
{:name clojure.core.matrix.operators, :doc "Namespace for core.matrix operators.\n\n   These operators provide convenient notation for common array operations (e.g. +, *, -=) that\n   replace equivalent functions in clojure.core and operate on whole arrays at once. Behaviour\n   for numerical scalar values remians the same as clojure.core", :excludes #{= vector? < <= * min not= > - / >= + max ==}, :use-macros {error clojure.core.matrix.macros}, :require-macros {clojure.core.matrix.macros clojure.core.matrix.macros, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :uses nil, :requires {m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :imports nil, :defs {** {:name clojure.core.matrix.operators/**, :file "resources/public/js/clojure/core/matrix/operators.cljc", :line 25, :column 1, :end-line 25, :end-column 8, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 25, :column 6, :end-line 25, :end-column 8}}, * {:name clojure.core.matrix.operators/*, :file "resources/public/js/clojure/core/matrix/operators.cljc", :line 20, :column 1, :end-line 22, :end-column 4, :doc "Array multiply operator. Uses elementwise multiplication.", :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 22, :column 3, :end-line 22, :end-column 4, :doc "Array multiply operator. Uses elementwise multiplication."}}, min {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 127, :column 7, :end-line 127, :end-column 10, :arglists (quote ([a] [a b] [a b & more])), :doc "Computes the element-wise min of arrays", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/min, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Computes the element-wise min of arrays"}, - {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 41, :column 7, :end-line 41, :end-column 8, :arglists (quote ([a] [a b] [a b & more])), :doc "Array subtraction operator. Equivalent to clojure.core.matrix/sub.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/-, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Array subtraction operator. Equivalent to clojure.core.matrix/sub."}, div= {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 115, :column 7, :end-line 115, :end-column 11, :arglists (quote ([a] [a b] [a b & more])), :doc "Inplace matrix division operator", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/div=, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Inplace matrix division operator"}, *= {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 104, :column 7, :end-line 104, :end-column 9, :arglists (quote ([a] [a b] [a b & more])), :doc "Inplace matrix multiplication operator", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/*=, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Inplace matrix multiplication operator"}, / {:protocol-inline nil, :meta {:arglists (quote ([a] [a b] [a b & more])), :doc "Element-wise matrix division. Equivalent to clojure.core.matrix/div.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :file nil}, :name clojure.core.matrix.operators//, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 51, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Element-wise matrix division. Equivalent to clojure.core.matrix/div."}, + {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 30, :column 7, :end-line 30, :end-column 8, :arglists (quote ([] [a] [a b] [a b & more])), :doc "Array addition operator. Equivalent to clojure.core.matrix/add.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [a] [a b]), :arglists ([] [a] [a b] [a b & more]), :arglists-meta (nil nil nil nil)}}, :name clojure.core.matrix.operators/+, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [a] [a b]), :arglists ([] [a] [a b] [a b & more]), :arglists-meta (nil nil nil nil)}, :method-params ([] [a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists ([] [a] [a b] [a b & more]), :doc "Array addition operator. Equivalent to clojure.core.matrix/add."}, += {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 84, :column 7, :end-line 84, :end-column 9, :arglists (quote ([a] [a b] [a b & more])), :doc "Inplace matrix addition operator", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/+=, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Inplace matrix addition operator"}, max {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 136, :column 7, :end-line 136, :end-column 10, :arglists (quote ([a] [a b] [a b & more])), :doc "Computes the element-wise max of arrays", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/max, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Computes the element-wise max of arrays"}, == {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 57, :column 7, :end-line 57, :end-column 9, :arglists (quote ([] [a] [a b] [a b & more])), :doc "Numerical array comparison. Equivalent to reducing with clojure.core.matrix/equals.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [a] [a b]), :arglists ([] [a] [a b] [a b & more]), :arglists-meta (nil nil nil nil)}}, :name clojure.core.matrix.operators/==, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [a] [a b]), :arglists ([] [a] [a b] [a b & more]), :arglists-meta (nil nil nil nil)}, :method-params ([] [a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists ([] [a] [a b] [a b & more]), :doc "Numerical array comparison. Equivalent to reducing with clojure.core.matrix/equals."}, -= {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/operators.cljc", :line 94, :column 7, :end-line 94, :end-column 9, :arglists (quote ([a] [a b] [a b & more])), :doc "Inplace matrix subtraction operator", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name clojure.core.matrix.operators/-=, :variadic true, :file "resources/public/js/clojure/core/matrix/operators.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Inplace matrix subtraction operator"}}}