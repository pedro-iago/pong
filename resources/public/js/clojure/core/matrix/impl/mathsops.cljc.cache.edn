;; Analyzed by ClojureScript 1.7.228
{:use-macros {def-mops clojure.core.matrix.impl.mathsops, def-mop clojure.core.matrix.impl.mathsops}, :excludes #{}, :name clojure.core.matrix.impl.mathsops, :imports nil, :requires nil, :uses nil, :defs {to-radians {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/to-radians, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, to-radians* {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 12, :column 15, :end-line 12, :end-column 26, :tag double, :arglists (quote ([x]))}, :name clojure.core.matrix.impl.mathsops/to-radians*, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :ret-tag double, :end-line 12, :max-fixed-arity 1, :tag double, :fn-var true, :arglists (quote ([x]))}, log {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/log, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, acos {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/acos, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, to-degrees {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/to-degrees, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, floor {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/floor, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tanh {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/tanh, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ceil {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/ceil, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, def-mops {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 49, :column 11, :end-line 49, :end-column 19, :macro true, :arglists (quote ([]))}, :name clojure.core.matrix.impl.mathsops/def-mops, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :end-column 19, :method-params ([&form &env]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :macro true, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([]))}, atan {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/atan, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, cos {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/cos, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, log10 {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/log10, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, tan {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/tan, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, cbrt {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/cbrt, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sqrt {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/sqrt, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, exp {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/exp, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, cosh {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/cosh, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, maths-ops {:name clojure.core.matrix.impl.mathsops/maths-ops, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 17, :column 1, :end-line 17, :end-column 15, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 17, :column 6, :end-line 17, :end-column 15}}, to-degrees* {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 7, :column 15, :end-line 7, :end-column 26, :tag double, :arglists (quote ([x]))}, :name clojure.core.matrix.impl.mathsops/to-degrees*, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :ret-tag double, :end-line 7, :max-fixed-arity 1, :tag double, :fn-var true, :arglists (quote ([x]))}, asin {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/asin, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, round {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/round, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, abs {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/abs, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sinh {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/sinh, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sin {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/sin, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, def-mop {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :line 40, :column 11, :end-line 40, :end-column 18, :macro true, :arglists (quote ([op-sym fn-sym])), :doc "Define a mathematical operator function."}, :name clojure.core.matrix.impl.mathsops/def-mop, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :end-column 18, :method-params ([&form &env op-sym fn-sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :macro true, :end-line 40, :max-fixed-arity 4, :fn-var true, :arglists (quote ([op-sym fn-sym])), :doc "Define a mathematical operator function."}, signum {:protocol-inline nil, :meta {:arglists (quote ([x])), :file nil}, :name clojure.core.matrix.impl.mathsops/signum, :variadic false, :file "resources/public/js/clojure/core/matrix/impl/mathsops.cljc", :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros {clojure.core.matrix.impl.mathsops clojure.core.matrix.impl.mathsops}, :cljs.analyzer/constants {:seen #{x Math/atan Math/rint to-radians Math/sign to-radians* Math/sinh log Math/log10 acos to-degrees floor tanh Math/sqrt Math/toDegrees ceil atan Math/exp clojure.core.matrix.impl.mathsops/def-mop double cljs.core/defn cos Math/acos log10 tan cbrt Math/floor do Math/toRadians sqrt Math/asin Math/ceil exp Math/abs cosh Math/cos Math/tan Math/cbrt Math/sin to-degrees* Math/signum asin round :tag abs Math/cosh sinh Math/log sin Math/tanh signum}, :order [abs Math/abs acos Math/acos asin Math/asin atan Math/atan cbrt Math/cbrt ceil Math/ceil cos Math/cos cosh Math/cosh exp Math/exp floor Math/floor log Math/log log10 Math/log10 round Math/rint signum Math/signum Math/sign sin Math/sin sinh Math/sinh sqrt Math/sqrt tan Math/tan tanh Math/tanh to-degrees Math/toDegrees to-degrees* to-radians Math/toRadians to-radians* cljs.core/defn x :tag double do clojure.core.matrix.impl.mathsops/def-mop]}, :doc nil}