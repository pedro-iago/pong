;; Analyzed by ClojureScript 1.7.228
{:use-macros {is-double-array? clojure.core.matrix.macros, c-for clojure.core.matrix.macros, scalar-coerce clojure.core.matrix.macros, error clojure.core.matrix.macros}, :excludes #{}, :name clojure.core.matrix.impl.double-array, :imports nil, :requires {mp clojure.core.matrix.protocols, clojure.core.matrix.protocols clojure.core.matrix.protocols, imp clojure.core.matrix.implementations, clojure.core.matrix.implementations clojure.core.matrix.implementations, wrap clojure.core.matrix.impl.wrappers, clojure.core.matrix.impl.wrappers clojure.core.matrix.impl.wrappers, clojure.core.matrix.impl.common clojure.core.matrix.impl.common, u clojure.core.matrix.utils, clojure.core.matrix.utils clojure.core.matrix.utils}, :uses {softplus-fn clojure.core.matrix.impl.common, square? clojure.core.matrix.impl.common, logistic-fn clojure.core.matrix.impl.common, relu-fn clojure.core.matrix.impl.common, symmetric-matrix-entries? clojure.core.matrix.impl.common}, :defs {new-double-array {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\resources\\public\\js\\clojure\\core\\matrix\\impl\\double_array.cljs", :line 14, :column 7, :end-line 14, :end-column 23, :arglists (quote ([shape])), :doc "Creates a new zero-filled nested double array of the given shape"}, :name clojure.core.matrix.impl.double-array/new-double-array, :variadic false, :file "resources\\public\\js\\clojure\\core\\matrix\\impl\\double_array.cljs", :end-column 23, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape])), :doc "Creates a new zero-filled nested double array of the given shape"}, construct-double-array {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\resources\\public\\js\\clojure\\core\\matrix\\impl\\double_array.cljs", :line 27, :column 7, :end-line 27, :end-column 29, :arglists (quote ([data]))}, :name clojure.core.matrix.impl.double-array/construct-double-array, :variadic false, :file "resources\\public\\js\\clojure\\core\\matrix\\impl\\double_array.cljs", :end-column 29, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :require-macros {clojure.core.matrix.macros clojure.core.matrix.macros, wrap clojure.core.matrix.impl.wrappers, clojure.core.matrix.impl.wrappers clojure.core.matrix.impl.wrappers}, :cljs.analyzer/constants {:seen #{:else :default :number-array :ndarray :doc}, :order [:else :default :number-array :doc :ndarray]}, :doc "Implementation supporting:\n\n   - Javascript double[] arrays as core.matrix 1D vectors\n  "}