;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{}, :name client.core, :imports nil, :requires {goog.dom goog.dom, dom om.dom, om.dom om.dom, client.aframe-react client.aframe-react, gdom goog.dom, client.ui.counters client.ui.counters, om om.next, a-vr client.aframe-react, om.next om.next, client.ui.spheres client.ui.spheres, client.parser client.parser}, :uses {CounterSphere client.ui.spheres, counter-sphere client.ui.spheres, counter client.ui.counters, parser client.parser, Counter client.ui.counters}, :defs {App {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name client.core/App, :variadic false, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, init-data {:name client.core/init-data, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 29, :column 1, :end-line 29, :end-column 15, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 29, :column 6, :end-line 29, :end-column 15}}, app-state {:name client.core/app-state, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 35, :column 1, :end-line 35, :end-column 19, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 35, :column 10, :end-line 35, :end-column 19}}, reconciler {:name client.core/reconciler, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 37, :column 1, :end-line 37, :end-column 16, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\core.cljs", :line 37, :column 6, :end-line 37, :end-column 16}}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:counts :om.next/queries :config :value :state :radius :parser :id :indexer :mult}, :order [:config :state :indexer :om.next/queries :counts :radius :id :value :mult :parser]}, :doc nil}