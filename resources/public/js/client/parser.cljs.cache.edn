;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name client.parser, :imports nil, :requires {om om.next, om.next om.next}, :uses nil, :defs {db->tree {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 4, :column 7, :end-line 4, :end-column 15, :arglists (quote ([{:keys [state query], :as env} key _]))}, :name client.parser/db->tree, :variadic false, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :end-column 15, :method-params ([p__20469 key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state query], :as env} key _]))}, readq {:name client.parser/readq, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 9, :column 1, :end-line 9, :end-column 16, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 9, :column 11, :end-line 9, :end-column 16}}, mutate {:name client.parser/mutate, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 21, :column 1, :end-line 21, :end-column 17, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 21, :column 11, :end-line 21, :end-column 17}}, parser {:name client.parser/parser, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 32, :column 1, :end-line 32, :end-column 12, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\client\\parser.cljs", :line 32, :column 6, :end-line 32, :end-column 12}}}, :require-macros {om om.next, om.next om.next}, :cljs.analyzer/constants {:seen #{:counts :read :default :value :state :radius :keys :not-found :id decrement! :count/by-id :action :query :hierarchy increment! :mutate}, :order [:state :query :value :hierarchy :default :counts :radius :not-found increment! :id :action :keys :count/by-id decrement! :read :mutate]}, :doc nil}