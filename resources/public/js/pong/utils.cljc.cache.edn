;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name pong.utils, :imports nil, :requires {s com.rpl.specter, com.rpl.specter com.rpl.specter, str clojure.string, clojure.string clojure.string, avl clojure.data.avl, clojure.data.avl clojure.data.avl, pong.paths pong.paths}, :uses {KEY-VAL pong.paths, PARAMS-PATHS pong.paths, KEY1-KEY2-VAL pong.paths}, :defs {keyed-dom {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([dom])), :doc "adds :id and :react-key with entities global and local keys, respectively"}, :name pong.utils/keyed-dom, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :end-column 16, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom])), :doc "adds :id and :react-key with entities global and local keys, respectively"}, fold-children {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :line 11, :column 7, :end-line 11, :end-column 20, :arglists (quote ([dom])), :doc "moves values of namespaced keywords to parent's :children"}, :name pong.utils/fold-children, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :end-column 20, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom])), :doc "moves values of namespaced keywords to parent's :children"}, switch-path {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([dom])), :doc "switches keypath order of a two-layer map"}, :name pong.utils/switch-path, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom])), :doc "switches keypath order of a two-layer map"}, compute {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :line 22, :column 7, :end-line 22, :end-column 14, :arglists (quote ([f params st])), :doc "computes function with parameters in state"}, :name pong.utils/compute, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/utils.cljc", :end-column 14, :method-params ([f params st]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f params st])), :doc "computes function with parameters in state"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:children :react-key :| :id}, :order [:react-key :id :| :children]}, :doc nil}