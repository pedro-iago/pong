;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name pong.components, :imports nil, :requires nil, :uses nil, :defs {omit {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 102, :column 7, :end-line 102, :end-column 11, :arglists (quote ([st k idn])), :doc "Omit a link at key"}, :name pong.components/omit, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 11, :method-params ([st k idn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 3, :fn-var true, :arglists (quote ([st k idn])), :doc "Omit a link at key"}, add {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 96, :column 7, :end-line 96, :end-column 10, :arglists (quote ([st c ks])), :doc "Add component and link at keys"}, :name pong.components/add, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 10, :method-params ([st c ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([st c ks])), :doc "Add component and link at keys"}, velocity {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 22, :column 9, :end-line 22, :end-column 17, :arglists (quote ([x y z] [x y z euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}}, :name pong.components/velocity, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}, :method-params ([x y z] [x y z euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 22, :end-line 22, :max-fixed-arity 4, :fn-var true, :arglists ([x y z] [x y z euid])}, show {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 105, :column 7, :end-line 105, :end-column 11, :arglists (quote ([st k idn])), :doc "Conj a link to key"}, :name pong.components/show, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 11, :method-params ([st k idn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 3, :fn-var true, :arglists (quote ([st k idn])), :doc "Conj a link to key"}, sensor {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 41, :column 9, :end-line 41, :end-column 15, :arglists (quote ([ty tr sq] [ty tr sq euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ty tr sq] [ty tr sq euid]), :arglists ([ty tr sq] [ty tr sq euid]), :arglists-meta (nil nil)}}, :name pong.components/sensor, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ty tr sq] [ty tr sq euid]), :arglists ([ty tr sq] [ty tr sq euid]), :arglists-meta (nil nil)}, :method-params ([ty tr sq] [ty tr sq euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 41, :end-line 41, :max-fixed-arity 4, :fn-var true, :arglists ([ty tr sq] [ty tr sq euid])}, carr {:name pong.components/carr, :file "src/cljs/pong/components.cljs", :line 58, :column 1, :end-line 58, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 58, :column 6, :end-line 58, :end-column 10}}, rotation {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 10, :column 9, :end-line 10, :end-column 17, :arglists (quote ([x y z] [x y z euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}}, :name pong.components/rotation, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}, :method-params ([x y z] [x y z euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists ([x y z] [x y z euid])}, get-entities {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 88, :column 7, :end-line 88, :end-column 19, :arglists (quote ([arr]))}, :name pong.components/get-entities, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 19, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, scale {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 16, :column 9, :end-line 16, :end-column 14, :arglists (quote ([x y z] [x y z euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}}, :name pong.components/scale, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}, :method-params ([x y z] [x y z euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 16, :end-line 16, :max-fixed-arity 4, :fn-var true, :arglists ([x y z] [x y z euid])}, delete {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 100, :column 7, :end-line 100, :end-column 13, :arglists (quote ([st idn])), :doc "Delete component and links"}, :name pong.components/delete, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 13, :method-params ([st idn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st idn])), :doc "Delete component and links"}, arr->db {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 78, :column 7, :end-line 78, :end-column 14, :arglists (quote ([arr]))}, :name pong.components/arr->db, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 14, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, geometry {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 28, :column 9, :end-line 28, :end-column 17, :arglists (quote ([p r] [p r euid])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p r] [p r euid]), :arglists ([p r] [p r euid]), :arglists-meta (nil nil)}}, :name pong.components/geometry, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p r] [p r euid]), :arglists ([p r] [p r euid]), :arglists-meta (nil nil)}, :method-params ([p r] [p r euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists ([p r] [p r euid])}, control {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 49, :column 9, :end-line 49, :end-column 16, :arglists (quote ([ty tr sq] [ty tr sq euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ty tr sq] [ty tr sq euid]), :arglists ([ty tr sq] [ty tr sq euid]), :arglists-meta (nil nil)}}, :name pong.components/control, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ty tr sq] [ty tr sq euid]), :arglists ([ty tr sq] [ty tr sq euid]), :arglists-meta (nil nil)}, :method-params ([ty tr sq] [ty tr sq euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 49, :end-line 49, :max-fixed-arity 4, :fn-var true, :arglists ([ty tr sq] [ty tr sq euid])}, material {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 35, :column 9, :end-line 35, :end-column 17, :arglists (quote ([c] [c euid])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([c] [c euid]), :arglists ([c] [c euid]), :arglists-meta (nil nil)}}, :name pong.components/material, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([c] [c euid]), :arglists ([c] [c euid]), :arglists-meta (nil nil)}, :method-params ([c] [c euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists ([c] [c euid])}, position {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/components.cljs", :line 4, :column 9, :end-line 4, :end-column 17, :arglists (quote ([x y z] [x y z euid])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}}, :name pong.components/position, :variadic false, :file "src/cljs/pong/components.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y z] [x y z euid]), :arglists ([x y z] [x y z euid]), :arglists-meta (nil nil)}, :method-params ([x y z] [x y z euid]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 4, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists ([x y z] [x y z euid])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:bob :transform :rotation :color :scale sphere :geometry :euid :radius :primitive :components :ctype :material :ident :position :dot :query :velocity}, :order [:ctype :euid :position :rotation :scale :velocity :primitive :radius :geometry :color :material :ident :transform :query sphere :dot :bob :components]}, :doc nil}