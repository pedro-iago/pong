;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name pong.aframe-react, :imports nil, :requires {str clojure.string, clojure.string clojure.string, cljsjs.react cljsjs.react, util om.util, om.util om.util}, :uses nil, :defs {mixin {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/mixin, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, entity {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/entity, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, scene {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/scene, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, tags {:name pong.aframe-react/tags, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :line 7, :column 1, :end-line 7, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :line 7, :column 6, :end-line 7, :end-column 10}}, el {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :line 62, :column 13, :end-line 62, :end-column 15, :arglists (quote ([tag opts & children])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag opts children)], :arglists ([tag opts & children]), :arglists-meta (nil)}}, :name pong.aframe-react/el, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(tag opts children)], :arglists ([tag opts & children]), :arglists-meta (nil)}, :method-params [(tag opts children)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists ([tag opts & children])}, serialize {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :line 44, :column 13, :end-line 44, :end-column 22, :arglists (quote ([props])), :doc "serializes cljs map into a-frame tag format"}, :name pong.aframe-react/serialize, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :end-column 22, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props])), :doc "serializes cljs map into a-frame tag format"}, animation {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/animation, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, from-data {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :line 68, :column 13, :end-line 68, :end-column 22, :arglists (quote ([ent])), :doc "turns cljs map into an element of tag :type (defaults to entity)"}, :name pong.aframe-react/from-data, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :end-column 22, :method-params ([ent]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ent])), :doc "turns cljs map into an element of tag :type (defaults to entity)"}, assets {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/assets, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, register-element {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/register-element, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, node {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/node, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, cubemap {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/cubemap, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}, event {:protocol-inline nil, :meta {:arglists (quote ([opts__21874__auto__ & children__21875__auto__])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :file nil}, :name pong.aframe-react/event, :variadic true, :file "/home/pedro/GitHub/pong/src/cljc/pong/aframe_react.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts__21874__auto__ children__21875__auto__)], :arglists ([opts__21874__auto__ & children__21875__auto__]), :arglists-meta (nil)}, :method-params [(opts__21874__auto__ children__21875__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 7, :line 60, :max-fixed-arity 1, :fn-var true, :arglists ([opts__21874__auto__ & children__21875__auto__])}}, :require-macros {a-vr pong.aframe-react, pong.aframe-react pong.aframe-react}, :cljs.analyzer/constants {:seen #{:children :else :type}, :order [:else :children :type]}, :doc nil}