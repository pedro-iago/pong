;; Analyzed by ClojureScript 1.7.228
{:use-macros {defui om.next}, :excludes #{}, :name pong.core, :imports nil, :requires {goog.dom goog.dom, pong.aframe-react pong.aframe-react, dom om.dom, pong.parser pong.parser, om.dom om.dom, gdom goog.dom, pong.ui.counters pong.ui.counters, om om.next, a-vr pong.aframe-react, om.next om.next, pong.ui.spheres pong.ui.spheres}, :uses {CounterSphere pong.ui.spheres, counter-sphere pong.ui.spheres, counter pong.ui.counters, parser pong.parser, Counter pong.ui.counters}, :defs {App {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name pong.core/App, :variadic false, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, init-data {:name pong.core/init-data, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 40, :column 1, :end-line 40, :end-column 15, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 40, :column 6, :end-line 40, :end-column 15}}, app-state {:name pong.core/app-state, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 46, :column 1, :end-line 46, :end-column 19, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 46, :column 10, :end-line 46, :end-column 19}}, reconciler {:name pong.core/reconciler, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 48, :column 1, :end-line 48, :end-column 16, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\core.cljs", :line 48, :column 6, :end-line 48, :end-column 16}}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:attribute :look-controls :counts :react-key :om.next/queries :config :fill :value :cursor :state :geometry :radius :begin :parser :from :id :dur :indexer :material :mult :camera :position :wasd-controls :to}, :order [:config :state :indexer :om.next/queries :counts :radius :react-key :camera :look-controls :position :wasd-controls :cursor :geometry :material :attribute :begin :dur :fill :from :to :id :value :mult :parser]}, :doc nil}