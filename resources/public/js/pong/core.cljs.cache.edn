;; Analyzed by ClojureScript 1.7.228
{:use-macros {defui om.next}, :excludes #{}, :name pong.core, :imports nil, :requires {goog.dom goog.dom, sys pong.system, pong.aframe-react pong.aframe-react, dom om.dom, pong.parser pong.parser, om.dom om.dom, pong.ui.scenes pong.ui.scenes, gdom goog.dom, avl clojure.data.avl, pong.ui.counters pong.ui.counters, om om.next, a-vr pong.aframe-react, om.next om.next, clojure.data.avl clojure.data.avl, pong.system pong.system, pong.ui.spheres pong.ui.spheres}, :uses {CounterSphere pong.ui.spheres, counter-sphere pong.ui.spheres, empty-scene pong.ui.scenes, EmptyScene pong.ui.scenes, counter pong.ui.counters, parser pong.parser, Counter pong.ui.counters}, :defs {App {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name pong.core/App, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, init-data {:name pong.core/init-data, :file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 28, :column 1, :end-line 28, :end-column 15, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 28, :column 6, :end-line 28, :end-column 15}}, app-state {:name pong.core/app-state, :file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 37, :column 1, :end-line 37, :end-column 19, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 37, :column 10, :end-line 37, :end-column 19}}, reconciler {:name pong.core/reconciler, :file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 40, :column 1, :end-line 40, :end-column 16, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 40, :column 6, :end-line 40, :end-column 16}}, loop-sys {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :line 48, :column 9, :end-line 48, :end-column 17, :arglists (quote ([]))}, :name pong.core/loop-sys, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:counts :om.next/queries :config :value :entities :state :radius :parser :id :indexer :mult}, :order [:config :state :indexer :om.next/queries :counts :radius :entities :id :value :mult :parser]}, :doc nil}