;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name pong.parser, :imports nil, :requires {om om.next, om.next om.next}, :uses nil, :defs {read {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([{:keys [state query], :as env} key params]))}, :name pong.parser/read, :variadic false, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :end-column 11, :method-params ([p__24341 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state query], :as env} key params]))}, mutate {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :line 14, :column 7, :end-line 14, :end-column 13, :arglists (quote ([{:keys [state query], :as env} key params]))}, :name pong.parser/mutate, :variadic false, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :end-column 13, :method-params ([p__24363 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state query], :as env} key params]))}, parser {:name pong.parser/parser, :file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :line 25, :column 1, :end-line 25, :end-column 12, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\parser.cljs", :line 25, :column 6, :end-line 25, :end-column 12}}}, :require-macros {om om.next, om.next om.next}, :cljs.analyzer/constants {:seen #{:counts :read :value :state :radius :keys :not-found :id :count/by-id :action :query :mutate}, :order [:state :query :value :not-found :id :action :keys :counts :radius :count/by-id :read :mutate]}, :doc nil}