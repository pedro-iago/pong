;; Analyzed by ClojureScript 1.7.228
{:use-macros {defpath com.rpl.specter.macros}, :excludes #{}, :name pong.fiddle, :imports nil, :requires {com.rpl.specter com.rpl.specter, pong.aframe-react pong.aframe-react, dom om.dom, pong.parser pong.parser, om.dom om.dom, mo clojure.core.matrix.operators, m clojure.core.matrix, clojure.core.matrix.operators clojure.core.matrix.operators, clojure.core.matrix clojure.core.matrix, s com.rpl.specter, pong.ui.counters pong.ui.counters, om om.next, a-vr pong.aframe-react, om.next om.next, pong.core pong.core, clojure.data.avl clojure.data.avl, pong.ui.spheres pong.ui.spheres}, :uses {split-key clojure.data.avl, CounterSphere pong.ui.spheres, rank-of clojure.data.avl, App pong.core, counter-sphere pong.ui.spheres, nearest clojure.data.avl, RandomSphere pong.ui.spheres, sorted-set clojure.data.avl, reconciler pong.core, split-at clojure.data.avl, init-data pong.core, counter pong.ui.counters, app-state pong.core, parser pong.parser, subrange clojure.data.avl, sorted-map clojure.data.avl, Counter pong.ui.counters}, :defs {switch-path {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 85, :column 7, :end-line 85, :end-column 18, :arglists (quote ([dom]))}, :name pong.fiddle/switch-path, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, sink {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 64, :column 7, :end-line 64, :end-column 11, :arglists (quote ([de pth]))}, :name pong.fiddle/sink, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 11, :method-params ([de pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([de pth]))}, velocity {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 59, :column 7, :end-line 59, :end-column 15, :arglists (quote ([x y z]))}, :name pong.fiddle/velocity, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, dom {:name pong.fiddle/dom, :file "src\\cljs\\pong\\fiddle.cljs", :line 66, :column 1, :end-line 66, :end-column 9, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 66, :column 6, :end-line 66, :end-column 9}}, ALL2 {:name pong.fiddle/ALL2, :file "src\\cljs\\pong\\fiddle.cljs", :line 49, :column 1, :end-line 49, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 49, :column 10, :end-line 49, :end-column 14}}, atom-state {:name pong.fiddle/atom-state, :file "src\\cljs\\pong\\fiddle.cljs", :line 119, :column 1, :end-line 119, :end-column 16, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 119, :column 6, :end-line 119, :end-column 16}}, loop-sys {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 114, :column 7, :end-line 114, :end-column 15, :arglists (quote ([st dt]))}, :name pong.fiddle/loop-sys, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, NAME-VAL {:name pong.fiddle/NAME-VAL, :file "src\\cljs\\pong\\fiddle.cljs", :line 104, :column 1, :end-line 104, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 104, :column 6, :end-line 104, :end-column 14}}, KEY-VAL {:name pong.fiddle/KEY-VAL, :file "src\\cljs\\pong\\fiddle.cljs", :line 96, :column 1, :end-line 96, :end-column 13, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 96, :column 6, :end-line 96, :end-column 13}}, reset-mult! {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([st mult]))}, :name pong.fiddle/reset-mult!, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 18, :method-params ([st mult]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st mult]))}, sys-ctrl {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 107, :column 7, :end-line 107, :end-column 15, :arglists (quote ([st dt]))}, :name pong.fiddle/sys-ctrl, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, dom-view {:name pong.fiddle/dom-view, :file "src\\cljs\\pong\\fiddle.cljs", :line 94, :column 1, :end-line 94, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 94, :column 6, :end-line 94, :end-column 14}}, sys-vel {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 98, :column 7, :end-line 98, :end-column 14, :arglists (quote ([st dt]))}, :name pong.fiddle/sys-vel, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 14, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, ecs {:name pong.fiddle/ecs, :file "src\\cljs\\pong\\fiddle.cljs", :line 93, :column 1, :end-line 93, :end-column 9, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 93, :column 6, :end-line 93, :end-column 9}}, src {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 63, :column 7, :end-line 63, :end-column 10, :arglists (quote ([cr pth]))}, :name pong.fiddle/src, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 10, :method-params ([cr pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cr pth]))}, ctrl {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 62, :column 7, :end-line 62, :end-column 11, :arglists (quote ([tr pth]))}, :name pong.fiddle/ctrl, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 11, :method-params ([tr pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tr pth]))}, geometry {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 60, :column 7, :end-line 60, :end-column 15, :arglists (quote ([prim r]))}, :name pong.fiddle/geometry, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([prim r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prim r]))}, material {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 61, :column 7, :end-line 61, :end-column 15, :arglists (quote ([c]))}, :name pong.fiddle/material, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, KEY1-KEY2-VAL {:name pong.fiddle/KEY1-KEY2-VAL, :file "src\\cljs\\pong\\fiddle.cljs", :line 82, :column 1, :end-line 82, :end-column 19, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 82, :column 6, :end-line 82, :end-column 19}}, position {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\fiddle.cljs", :line 58, :column 7, :end-line 58, :end-column 15, :arglists (quote ([x y z]))}, :name pong.fiddle/position, :variadic false, :file "src\\cljs\\pong\\fiddle.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros, om om.next, om.next om.next, dom om.dom, om.dom om.dom, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :cljs.analyzer/constants {:seen #{:transform :ctrl/velocity :color :create :ctrl/a :e/b0 :delete :ctrl/zzz :geometry :radius :primitive :id decrement! :material :count/by-id :e/a1 :mult :position :zzz :params-path increment! :velocity :e/a0}, :order [:count/by-id :mult increment! :id decrement! :primitive :radius :color :transform :params-path :create :delete :e/a0 :e/a1 :e/b0 :position :velocity :geometry :material :ctrl/velocity :zzz :ctrl/a :ctrl/zzz]}, :doc nil}