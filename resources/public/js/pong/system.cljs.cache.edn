;; Analyzed by ClojureScript 1.7.228
{:use-macros {defpath com.rpl.specter.macros}, :excludes #{}, :name pong.system, :imports nil, :requires {s com.rpl.specter, com.rpl.specter com.rpl.specter, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix, mo clojure.core.matrix.operators, clojure.core.matrix.operators clojure.core.matrix.operators, avl clojure.data.avl, clojure.data.avl clojure.data.avl}, :uses nil, :defs {switch-path {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 96, :column 7, :end-line 96, :end-column 18, :arglists (quote ([dom]))}, :name pong.system/switch-path, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, jump {:name pong.system/jump, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 39, :column 1, :end-line 39, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 39, :column 6, :end-line 39, :end-column 10}}, velocity {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([x y z]))}, :name pong.system/velocity, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, dom {:name pong.system/dom, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 47, :column 1, :end-line 47, :end-column 9, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 47, :column 6, :end-line 47, :end-column 9}}, subgroup {:name pong.system/subgroup, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 20, :column 1, :end-line 20, :end-column 18, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 20, :column 10, :end-line 20, :end-column 18}}, step-ecs {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 110, :column 7, :end-line 110, :end-column 15, :arglists (quote ([ecs dt]))}, :name pong.system/step-ecs, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([ecs dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ecs dt]))}, NAME-VAL {:name pong.system/NAME-VAL, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 91, :column 1, :end-line 91, :end-column 14, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 91, :column 6, :end-line 91, :end-column 14}}, NAME1-KEY2-VAL {:name pong.system/NAME1-KEY2-VAL, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 94, :column 1, :end-line 94, :end-column 20, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 94, :column 6, :end-line 94, :end-column 20}}, KEY-VAL {:name pong.system/KEY-VAL, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 89, :column 1, :end-line 89, :end-column 13, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 89, :column 6, :end-line 89, :end-column 13}}, mean {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 45, :column 7, :end-line 45, :end-column 11, :arglists (quote ([mtx]))}, :name pong.system/mean, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 11, :method-params ([mtx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mtx]))}, flow {:name pong.system/flow, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 40, :column 1, :end-line 40, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 40, :column 6, :end-line 40, :end-column 10}}, reach {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 43, :column 7, :end-line 43, :end-column 12, :arglists (quote ([p q]))}, :name pong.system/reach, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 12, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p q]))}, geometry {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([prim r]))}, :name pong.system/geometry, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([prim r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prim r]))}, fsm {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([pth] [md pths])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([pth] [md pths]), :arglists ([pth] [md pths]), :arglists-meta (nil nil)}}, :name pong.system/fsm, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([pth] [md pths]), :arglists ([pth] [md pths]), :arglists-meta (nil nil)}, :method-params ([pth] [md pths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists ([pth] [md pths])}, sys-fsm {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 101, :column 7, :end-line 101, :end-column 14, :arglists (quote ([st dt]))}, :name pong.system/sys-fsm, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 14, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, step-dom {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 114, :column 7, :end-line 114, :end-column 15, :arglists (quote ([dom dt]))}, :name pong.system/step-dom, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([dom dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom dt]))}, avoid {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 44, :column 7, :end-line 44, :end-column 12, :arglists (quote ([p q]))}, :name pong.system/avoid, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 12, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p q]))}, id {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 29, :column 7, :end-line 29, :end-column 9, :arglists (quote ([uid]))}, :name pong.system/id, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 9, :method-params ([uid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uid]))}, material {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 33, :column 7, :end-line 33, :end-column 15, :arglists (quote ([c]))}, :name pong.system/material, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, KEY1-KEY2-VAL {:name pong.system/KEY1-KEY2-VAL, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 90, :column 1, :end-line 90, :end-column 19, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 90, :column 6, :end-line 90, :end-column 19}}, position {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([x y z]))}, :name pong.system/position, :variadic false, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, ALL {:name pong.system/ALL, :file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 11, :column 1, :end-line 11, :end-column 13, :meta {:file "/home/pedro/GitHub/pong/src/cljs/pong/system.cljs", :line 11, :column 10, :end-line 11, :end-column 13}}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :cljs.analyzer/constants {:seen #{:color a :| :mode triangle :geometry :radius | :center :primitive :c :id :material fsm :triangle/a :b :position :fsm/position :triangle/c :params-path :fear :step :velocity :fsm/velocity :triangle/b :a :love}, :order [a | :primitive :radius :color :mode :params-path :step :love :id :position :geometry :material :fsm/position :center :fear :triangle/a :velocity :fsm/velocity :a :triangle/b :b :triangle/c :c triangle fsm :|]}, :doc nil}