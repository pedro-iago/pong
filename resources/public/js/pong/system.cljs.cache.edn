;; Analyzed by ClojureScript 1.7.228
{:use-macros {defpath com.rpl.specter.macros}, :excludes #{}, :name pong.system, :imports nil, :requires {s com.rpl.specter, com.rpl.specter com.rpl.specter, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix, mo clojure.core.matrix.operators, clojure.core.matrix.operators clojure.core.matrix.operators, avl clojure.data.avl, clojure.data.avl clojure.data.avl}, :uses nil, :defs {switch-path {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([dom]))}, :name pong.system/switch-path, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, sink {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 25, :column 7, :end-line 25, :end-column 11, :arglists (quote ([de pth]))}, :name pong.system/sink, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 11, :method-params ([de pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([de pth]))}, velocity {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 20, :column 7, :end-line 20, :end-column 15, :arglists (quote ([x y z]))}, :name pong.system/velocity, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, dom {:name pong.system/dom, :file "src\\cljs\\pong\\system.cljs", :line 27, :column 1, :end-line 27, :end-column 9, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 27, :column 6, :end-line 27, :end-column 9}}, ALL2 {:name pong.system/ALL2, :file "src\\cljs\\pong\\system.cljs", :line 9, :column 1, :end-line 9, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 9, :column 10, :end-line 9, :end-column 14}}, step-ecs {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([ecs dt]))}, :name pong.system/step-ecs, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([ecs dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ecs dt]))}, NAME-VAL {:name pong.system/NAME-VAL, :file "src\\cljs\\pong\\system.cljs", :line 69, :column 1, :end-line 69, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 69, :column 6, :end-line 69, :end-column 14}}, KEY-VAL {:name pong.system/KEY-VAL, :file "src\\cljs\\pong\\system.cljs", :line 61, :column 1, :end-line 61, :end-column 13, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 61, :column 6, :end-line 61, :end-column 13}}, sys-ctrl {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([st dt]))}, :name pong.system/sys-ctrl, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, dom-view {:name pong.system/dom-view, :file "src\\cljs\\pong\\system.cljs", :line 59, :column 1, :end-line 59, :end-column 14, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 59, :column 6, :end-line 59, :end-column 14}}, sys-vel {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 63, :column 7, :end-line 63, :end-column 14, :arglists (quote ([st dt]))}, :name pong.system/sys-vel, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 14, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, ecs {:name pong.system/ecs, :file "src\\cljs\\pong\\system.cljs", :line 58, :column 1, :end-line 58, :end-column 9, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 58, :column 6, :end-line 58, :end-column 9}}, src {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 24, :column 7, :end-line 24, :end-column 10, :arglists (quote ([cr pth]))}, :name pong.system/src, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 10, :method-params ([cr pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cr pth]))}, ctrl {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([tr pth]))}, :name pong.system/ctrl, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 11, :method-params ([tr pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tr pth]))}, geometry {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([prim r]))}, :name pong.system/geometry, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([prim r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prim r]))}, step-dom {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([dom dt]))}, :name pong.system/step-dom, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([dom dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom dt]))}, id {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 18, :column 7, :end-line 18, :end-column 9, :arglists (quote ([uid]))}, :name pong.system/id, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 9, :method-params ([uid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uid]))}, material {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([c]))}, :name pong.system/material, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, KEY1-KEY2-VAL {:name pong.system/KEY1-KEY2-VAL, :file "src\\cljs\\pong\\system.cljs", :line 47, :column 1, :end-line 47, :end-column 19, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 47, :column 6, :end-line 47, :end-column 19}}, position {:protocol-inline nil, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\system.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([x y z]))}, :name pong.system/position, :variadic false, :file "src\\cljs\\pong\\system.cljs", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :cljs.analyzer/constants {:seen #{:e/| :transform :ctrl/velocity :color :| :create :ctrl/a :e/b0 :delete :geometry :radius :primitive :id :material :e/a1 :e/a :position :params-path :velocity :ctrl/| :e/a0}, :order [:primitive :radius :color :transform :params-path :create :delete :e/a0 :id :position :velocity :geometry :material :ctrl/velocity :e/b0 :e/a1 :| :ctrl/a :ctrl/| :e/a :e/|]}, :doc nil}