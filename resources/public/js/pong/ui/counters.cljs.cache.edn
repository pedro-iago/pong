;; Analyzed by ClojureScript 1.7.228
{:use-macros {defui om.next}, :excludes #{}, :name pong.ui.counters, :imports nil, :requires {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :uses nil, :defs {Counter {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name pong.ui.counters/Counter, :variadic false, :file "src\\cljs\\pong\\ui\\counters.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, counter {:name pong.ui.counters/counter, :file "src\\cljs\\pong\\ui\\counters.cljs", :line 21, :column 1, :end-line 21, :end-column 13, :meta {:file "C:\\Users\\PedroIago\\Documents\\GitHub\\pong\\src\\cljs\\pong\\ui\\counters.cljs", :line 21, :column 6, :end-line 21, :end-column 13}}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:om.next/queries :config :value :state :id :indexer :count/by-id increment!}, :order [:config :state :indexer :om.next/queries :id :value increment! :count/by-id]}, :doc nil}