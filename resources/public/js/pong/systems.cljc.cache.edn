;; Analyzed by ClojureScript 1.7.228
{:use-macros {defpath com.rpl.specter.macros}, :excludes #{}, :name pong.systems, :imports nil, :requires {s com.rpl.specter, com.rpl.specter com.rpl.specter, com.rpl.specter.impl com.rpl.specter.impl, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix, mo clojure.core.matrix.operators, clojure.core.matrix.operators clojure.core.matrix.operators, avl clojure.data.avl, clojure.data.avl clojure.data.avl}, :uses {compiled-path? com.rpl.specter.impl, structure-path? com.rpl.specter.impl}, :defs {switch-path {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 51, :column 7, :end-line 51, :end-column 18, :arglists (quote ([dom]))}, :name pong.systems/switch-path, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 18, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, jump {:name pong.systems/jump, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 75, :column 1, :end-line 75, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 75, :column 6, :end-line 75, :end-column 10}}, velocity {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 67, :column 7, :end-line 67, :end-column 15, :arglists (quote ([x y z]))}, :name pong.systems/velocity, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, dom {:name pong.systems/dom, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 88, :column 1, :end-line 88, :end-column 9, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 88, :column 6, :end-line 88, :end-column 9}}, subgroup {:name pong.systems/subgroup, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 30, :column 1, :end-line 30, :end-column 18, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 30, :column 10, :end-line 30, :end-column 18}}, step-ecs {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 148, :column 7, :end-line 148, :end-column 15, :arglists (quote ([ecs dt]))}, :name pong.systems/step-ecs, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([ecs dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ecs dt]))}, follow {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 82, :column 7, :end-line 82, :end-column 13, :arglists (quote ([p q k1 k2]))}, :name pong.systems/follow, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 13, :method-params ([p q k1 k2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p q k1 k2]))}, fold-children {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 47, :column 7, :end-line 47, :end-column 20, :arglists (quote ([dom]))}, :name pong.systems/fold-children, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 20, :method-params ([dom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom]))}, KEY-VAL {:name pong.systems/KEY-VAL, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 41, :column 1, :end-line 41, :end-column 13, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 41, :column 6, :end-line 41, :end-column 13}}, mean {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 81, :column 7, :end-line 81, :end-column 11, :arglists (quote ([mtx]))}, :name pong.systems/mean, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 11, :method-params ([mtx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mtx]))}, flow {:name pong.systems/flow, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 76, :column 1, :end-line 76, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 76, :column 6, :end-line 76, :end-column 10}}, KEYS {:name pong.systems/KEYS, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 29, :column 1, :end-line 29, :end-column 10, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 29, :column 6, :end-line 29, :end-column 10}}, reach {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 79, :column 7, :end-line 79, :end-column 12, :arglists (quote ([p q k]))}, :name pong.systems/reach, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 12, :method-params ([p q k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p q k]))}, compute {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([f params st]))}, :name pong.systems/compute, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 14, :method-params ([f params st]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f params st]))}, PARAMS-PATHS {:name pong.systems/PARAMS-PATHS, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 43, :column 1, :end-line 43, :end-column 18, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 43, :column 6, :end-line 43, :end-column 18}}, geometry {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 68, :column 7, :end-line 68, :end-column 15, :arglists (quote ([prim r]))}, :name pong.systems/geometry, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([prim r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prim r]))}, fsm {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 70, :column 7, :end-line 70, :end-column 10, :arglists (quote ([pth] [md params])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([pth] [md params]), :arglists ([pth] [md params]), :arglists-meta (nil nil)}}, :name pong.systems/fsm, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([pth] [md params]), :arglists ([pth] [md params]), :arglists-meta (nil nil)}, :method-params ([pth] [md params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists ([pth] [md params])}, sys-fsm {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 140, :column 7, :end-line 140, :end-column 14, :arglists (quote ([st dt]))}, :name pong.systems/sys-fsm, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 14, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, step-dom {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 151, :column 7, :end-line 151, :end-column 15, :arglists (quote ([dom dt]))}, :name pong.systems/step-dom, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([dom dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dom dt]))}, FSM-COMPONENTS {:name pong.systems/FSM-COMPONENTS, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 44, :column 1, :end-line 44, :end-column 20, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 44, :column 6, :end-line 44, :end-column 20}}, avoid {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 80, :column 7, :end-line 80, :end-column 12, :arglists (quote ([p q k]))}, :name pong.systems/avoid, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 12, :method-params ([p q k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p q k]))}, id {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 65, :column 7, :end-line 65, :end-column 9, :arglists (quote ([uid]))}, :name pong.systems/id, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 9, :method-params ([uid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uid]))}, material {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 69, :column 7, :end-line 69, :end-column 15, :arglists (quote ([c]))}, :name pong.systems/material, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, app {:name pong.systems/app, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 156, :column 1, :end-line 156, :end-column 9, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 156, :column 6, :end-line 156, :end-column 9}}, KEY1-KEY2-VAL {:name pong.systems/KEY1-KEY2-VAL, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 42, :column 1, :end-line 42, :end-column 19, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 42, :column 6, :end-line 42, :end-column 19}}, path? {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 40, :column 6, :end-line 40, :end-column 11}, :name pong.systems/path?, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 11, :method-params ([p1__61013#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists nil}, position {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([x y z]))}, :name pong.systems/position, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}, ALL {:name pong.systems/ALL, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 21, :column 5, :end-line 21, :end-column 17, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 21, :column 14, :end-line 21, :end-column 17}}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros, m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :cljs.analyzer/constants {:seen #{:attribute :children :look-controls :color :triangle :| :triangle/oscilate :mode :params :type :geometry :radius :triangle/camera :primitive :active :id :material :triangle/a :camera :position :fsm/position :triangle/c :fear :step :velocity :fsm/velocity :direction :triangle/b :love :to}, :order [:| :children :primitive :radius :color :mode :params :step :love :id :position :geometry :material :fsm/position :triangle :fear :triangle/a :velocity :fsm/velocity :triangle/b :triangle/c :triangle/oscilate :type :attribute :to :direction :triangle/camera :camera :look-controls :active]}, :doc nil}