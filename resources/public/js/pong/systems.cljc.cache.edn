;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name pong.systems, :imports nil, :requires {com.rpl.specter com.rpl.specter, pong.utils pong.utils, pong.paths pong.paths, mo clojure.core.matrix.operators, m clojure.core.matrix, clojure.core.matrix.operators clojure.core.matrix.operators, avl clojure.data.avl, clojure.core.matrix clojure.core.matrix, s com.rpl.specter, clojure.data.avl clojure.data.avl}, :uses {switch-path pong.utils, subgroup pong.paths, compute pong.utils, FSM-COMPONENTS pong.paths}, :defs {sys-fsm {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([st dt]))}, :name pong.systems/sys-fsm, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 14, :method-params ([st dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([st dt]))}, step-ecs {:protocol-inline nil, :meta {:file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([ecs dt]))}, :name pong.systems/step-ecs, :variadic false, :file "/home/pedro/GitHub/pong/src/cljc/pong/systems.cljc", :end-column 15, :method-params ([ecs dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ecs dt]))}}, :require-macros {m clojure.core.matrix, clojure.core.matrix clojure.core.matrix}, :cljs.analyzer/constants {:seen #{:mode :params :step}, :order [:mode :params :step]}, :doc nil}